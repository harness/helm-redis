
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-sentinel-harness-server
  namespace: {{ .Release.Namespace }}
  labels:
    redis-sentinel-harness: replica
    app: redis-sentinel
    {{- include "redis.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      release: redis-ha
      app: redis-sentinel
      {{- include "redis.selectorLabels" . | nindent 6 }}
  serviceName: redis-sentinel-harness
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/init-config: 0fb17318c62ec6e7f89897284e4d3edf7b1a0fc156692f8b15db8fd976df2e48
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        release: redis-ha
        app: redis-sentinel
        redis-sentinel-harness: replica
        {{- include "redis.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "redis.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - name: config-init
        image: {{ include "common.images.image" (dict "imageRoot" .Values.initContainers.config_init.image "global" .Values.global) }}
        imagePullPolicy: {{ .Values.initContainers.config_init.image.pullPolicy}}
        resources:
          {}
        command:
        - sh
        args:
        - /readonly-config/init.sh
        env:
        - name: SENTINEL_ID_0
          value: ed89975e57ea5a6848fe664901b11b5e6b22b537

        - name: SENTINEL_ID_1
          value: 4abd57ef009b0a1595767af80ef815e3438ae7e9

        - name: SENTINEL_ID_2
          value: e21a3c2cf7abdfc6e8d921901addb1bf86fe32a0
        volumeMounts:
        - name: config
          mountPath: /readonly-config
          readOnly: true
        - name: data
          mountPath: /data
      containers:
      - name: redis
        image: {{ include "redis.redisImage" . }}
        imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
        command:
        - redis-server
        args:
        - /data/conf/redis.conf
        env:
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.serverport }}
          initialDelaySeconds: 15
        resources:
              {{- toYaml .Values.redis.resources | nindent 12 }}
        ports:
        - name: redis
          containerPort: {{ .Values.service.serverport }}
        volumeMounts:
        - mountPath: /data
          name: data
      - name: sentinel
        image: {{ include "redis.sentinelImage" . }}
        imagePullPolicy: {{ .Values.sentinel.image.pullPolicy }}
        command:
          - redis-sentinel
        args:
          - /data/conf/sentinel.conf
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.sentinelport }}
          initialDelaySeconds: 15
        resources:
              {{- toYaml .Values.sentinel.resources | nindent 12 }}
        ports:
          - name: sentinel
            containerPort: {{ .Values.service.sentinelport }}
        volumeMounts:
        - mountPath: /data
          name: data
      volumes:
      - name: config
        configMap:
          name: redis-sentinel-harness-configmap
      affinity:
        {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.useAntiAffinity }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: redis-sentinel
                  release: redis-ha
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app:  redis-sentinel
                    release: redis-ha
                    redis-sentinel-harness: replica
                topologyKey: failure-domain.beta.kubernetes.io/zone
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
      annotations:
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: {{ .Values.volumeClaimTemplate.resources.requests.storage }}
      {{- if .Values.global.storageClassName }}
      storageClassName: {{ .Values.global.storageClassName }}
      {{- end }}
